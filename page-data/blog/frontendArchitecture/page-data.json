{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/frontendArchitecture","result":{"data":{"markdownRemark":{"html":"<p>네스트로 서버를 구축하고나서 잘 짜여진 아키텍쳐가 개발자에게 얼마나 큰 효용을 줄 수 있는지를 너무나도 크게 느꼈다.\n개인 프로젝트인 choichoikule studio e-commerce site를 구축하면서 프론트엔드도 그러한 잘 짜여진 아키텍쳐 위에서\n작업하면 좋겠다는 생각을 하게 되었다. <a href=\"https://github.com/alan2207/bulletproof-react\">Bulletproof React</a>\n프로젝트 base에서 내가 원하는 방향으로 조금 수정한 아키텍쳐에 대한 설명을 시리즈로 포스팅할 예정이다.</p>\n<p>아키텍쳐에서 중요한 것은 관심사의 분리, 일관된 컨벤션, 확장성이다.\n구성요소가 많아지면서 장황해지는 것을 최대한 경계한다.</p>\n<h2>아키텍쳐 구성요소</h2>\n<p>컴포넌트를 정리하는 방식\n-> atomic design (atom>molecule>organism>template>page)\natom: button과 같은 작은 단위의 컴포넌트\napi로 부터 수신한 데이터는 customhook으로 분리한다.\n내가 받을 리스트는 useProductList, useProductDetail, useUser 등등이 될 수 있겠다.</p>\n<p>plop을 사용해서 필요한 기본 조합 제너레이트\n웹 바이탈체크,\n테스트 포함,\n리액트 18의 suspense 포함 렌더링직후 불러오기의 워터폴문제, 혹은 중앙화방식에서 모두를 기다리는것 방지가능 데이터가 계속 흘러들어옴에 따라, React는 렌더링을 다시 시도하며, 그 때마다 React가 “더 깊은 곳까지” 처리할 수 있게 될 겁니다.\nzustand 상태관리 라이브러리/ 서버스테이트를 다루는 리액트 쿼리\n서비스워커란 무엇인가? 서비스 워커를 사용하면 오프라인인 경우에도 일관적인 경험을 제공한다음 네트워크 연결이 돌아올때 더 많은 데이터를 불러오게 할 수 있다. 백그라운드 동기화, 푸시알람의 기능을 수행할 수 있다.\n네이티브앱에서는 이미 널리 구현되는 기법이다. 제일 나중의 문제로 남겨둔다.</p>\n<p>리액트 헬멧과 개츠비로 메타데이터 변경</p>\n<h1>상태값을 관리하기</h1>\n<p>리액트에서 상태를 관리하기 위한 수 많은 방법이 존재한다.\n이 프로젝트에서는 zustand, react-query, suspense, custom hook, react-query-auth을 사용할 것 이다.</p>\n<h4>기본적인 상태 (zustand)</h4>\n<p>아래와 같이 store를 정의하고 가져와 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> create <span class=\"token keyword\">from</span> <span class=\"token string\">\"zustand\"</span>\n\n<span class=\"token comment\">// set 함수를 통해서만 상태를 변경할 수 있다</span>\n<span class=\"token keyword\">const</span> useStore <span class=\"token operator\">=</span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token keyword\">set</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  bears<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">increasePopulation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> bears<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>bears <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">removeAllBears</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> bears<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 상태를 꺼낸다</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">BearCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> bears <span class=\"token operator\">=</span> <span class=\"token function\">useStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span>bears<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>bears<span class=\"token punctuation\">}</span> around here <span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 상태를 변경하는 액션을 꺼낸다</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Controls</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> increasePopulation <span class=\"token operator\">=</span> <span class=\"token function\">useStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span>increasePopulation<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>increasePopulation<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>one up<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>유저에관한 상태</h4>\n<p>리액트쿼리오쓰를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token comment\">// src/lib/auth.ts</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initReactQueryAuth <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-query-auth'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> loginUser<span class=\"token punctuation\">,</span> loginFn<span class=\"token punctuation\">,</span> registerFn<span class=\"token punctuation\">,</span> logoutFn <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n  name<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Error</span> <span class=\"token punctuation\">{</span>\n  message<span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> authConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  loadUser<span class=\"token punctuation\">,</span>\n  loginFn<span class=\"token punctuation\">,</span>\n  registerFn<span class=\"token punctuation\">,</span>\n  logoutFn<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> AuthProvider<span class=\"token punctuation\">,</span> useAuth <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> initReactQueryAuth<span class=\"token operator\">&lt;</span>\n  User<span class=\"token punctuation\">,</span>\n  Error<span class=\"token punctuation\">,</span>\n  LoginCredentials<span class=\"token punctuation\">,</span>\n  RegisterCredentials\n<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>authConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> QueryClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-query'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> QueryClientProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-query/devtools'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AuthProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'src/lib/auth'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> queryClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>QueryClientProvider client<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>queryClient<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>AuthProvider<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token comment\">//the rest the app goes here}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AuthProvider<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>QueryClientProvider<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useAuth <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"src/lib/auth\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">UserInfo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>My Name is <span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>서버상태</li>\n<li>데이터결과</li>\n<li>데이터 상관없는 ui 동작제어를 위한 상태</li>\n</ul>\n<p>참고:<br>\n<a href=\"https://ui.toast.com/weekly-pick/ko_20210812\">zustand</a></p>","excerpt":"네스트로 서버를 구축하고나서 잘 짜여진 아키텍쳐가 개발자에게 얼마나 큰 효용을 줄 수 있는지를 너무나도 크게 느꼈다.\n개인 프로젝트인 choichoikule studio e-commerce site…","frontmatter":{"date":"11 November, 2021","path":"/blog/frontendArchitecture","title":"Frontend Architecture with React-1"},"fields":{"readingTime":{"text":"5 min read"}}}},"pageContext":{}},"staticQueryHashes":["63159454"]}